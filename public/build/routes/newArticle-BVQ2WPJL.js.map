{
  "version": 3,
  "sources": ["browser-route-module:C:\\Users\\laris\\Conduit\\app\\routes\\newArticle.tsx?browser", "../../../app/routes/newArticle.tsx"],
  "sourcesContent": ["export { default } from \"C:\\\\Users\\\\laris\\\\Conduit\\\\app\\\\routes\\\\newArticle.tsx\";", "import type { ActionFunction } from \"remix\";\r\nimport { redirect } from \"remix\";\r\nimport { db } from \"~/utils/db.server\";\r\nimport { useActionData, json } from \"remix\";\r\n\r\nfunction validateInputs(inputContent: string, numberOfChar: number) {\r\n  if (inputContent.length < numberOfChar) {\r\n    return `This is too short`;\r\n  }\r\n}\r\n\r\ntype ActionData = {\r\n  formError?: string;\r\n  fieldErrors?: {\r\n    title: string | undefined;\r\n    tag: string | undefined;\r\n    bio: string | undefined;\r\n    description: string | undefined;\r\n  };\r\n  fields?: {\r\n    title: string | undefined;\r\n    tag: string | undefined;\r\n    bio: string | undefined;\r\n    description: string | undefined;\r\n  };\r\n};\r\n\r\nconst badRequest = (data: ActionData) => json(data, { status: 400 });\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const form = await request.formData();\r\n  const title = form.get(\"title\");\r\n  const bio = form.get(\"bio\");\r\n  const description = form.get(\"description\");\r\n  const tags = form.get(\"tags\");\r\n\r\n  if (\r\n    typeof title !== \"string\" ||\r\n    typeof bio !== \"string\" ||\r\n    typeof description !== \"string\" ||\r\n    typeof tags !== \"string\"\r\n  ) {\r\n    return badRequest({\r\n      formError: `Form not submitted correctly.`,\r\n    });\r\n  }\r\n\r\n  const fieldErrors = {\r\n    title: validateInputs(title, 10),\r\n    tag: validateInputs(tags, 3),\r\n    bio: validateInputs(bio, 20),\r\n    description: validateInputs(description, 400),\r\n  };\r\n\r\n  const fields = { title, bio, description, tags };\r\n\r\n  if (Object.values(fieldErrors).some(Boolean)) {\r\n    return badRequest({ fieldErrors, ...fields });\r\n  }\r\n\r\n  const userInfo = await db.user.create({\r\n    data: { userName: \"larissa\", ...fields },\r\n  });\r\n  return redirect(`/home/${userInfo.id}`);\r\n};\r\n\r\nexport default function NewArticleRoute() {\r\n  const actionData = useActionData<ActionData>();\r\n\r\n  return (\r\n    <div className=\"editor-page\">\r\n      <div className=\"container page\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-10 offset-md-1 col-xs-12\">\r\n            <form method=\"post\">\r\n              <fieldset>\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={actionData?.fields?.title}\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Article Title\"\r\n                    name=\"title\"\r\n                    aria-invalid={\r\n                      Boolean(actionData?.fieldErrors?.title) || undefined\r\n                    }\r\n                    aria-describedby={\r\n                      actionData?.fieldErrors?.title ? \"name-error\" : undefined\r\n                    }\r\n                  />\r\n                  {actionData?.fieldErrors?.title ? (\r\n                    <p className=\"error-messages\" role=\"alert\" id=\"name-error\">\r\n                      {actionData.fieldErrors.title}\r\n                    </p>\r\n                  ) : null}\r\n                </fieldset>\r\n\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={actionData?.fields?.bio}\r\n                    className=\"form-control\"\r\n                    placeholder=\"What's this article about?\"\r\n                    name=\"bio\"\r\n                    aria-invalid={\r\n                      Boolean(actionData?.fieldErrors?.bio) || undefined\r\n                    }\r\n                    aria-describedby={\r\n                      actionData?.fieldErrors?.bio ? \"content-error\" : undefined\r\n                    }\r\n                  />\r\n                  {actionData?.fieldErrors?.bio ? (\r\n                    <p\r\n                      className=\"error-messages\"\r\n                      role=\"alert\"\r\n                      id=\"content-error\"\r\n                    >\r\n                      {actionData.fieldErrors.bio}\r\n                    </p>\r\n                  ) : null}\r\n                </fieldset>\r\n\r\n                <fieldset className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    placeholder=\"Write your article (in markdown)\"\r\n                    name=\"description\"\r\n                    defaultValue={actionData?.fields?.description}\r\n                    aria-invalid={\r\n                      Boolean(actionData?.fieldErrors?.description) || undefined\r\n                    }\r\n                    aria-describedby={\r\n                      actionData?.fieldErrors?.description\r\n                        ? \"content-error\"\r\n                        : undefined\r\n                    }\r\n                  ></textarea>\r\n                  {actionData?.fieldErrors?.description ? (\r\n                    <p\r\n                      className=\"error-messages\"\r\n                      role=\"alert\"\r\n                      id=\"content-error\"\r\n                    >\r\n                      {actionData.fieldErrors.description}\r\n                    </p>\r\n                  ) : null}\r\n                </fieldset>\r\n\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter tags\"\r\n                    name=\"tags\"\r\n                    defaultValue={actionData?.fields?.tag}\r\n                    aria-invalid={\r\n                      Boolean(actionData?.fieldErrors?.tag) || undefined\r\n                    }\r\n                    aria-describedby={\r\n                      actionData?.fieldErrors?.tag ? \"content-error\" : undefined\r\n                    }\r\n                  />\r\n                  <div className=\"tag-list\"></div>\r\n                  {actionData?.fieldErrors?.tag ? (\r\n                    <p\r\n                      className=\"error-messages\"\r\n                      role=\"alert\"\r\n                      id=\"content-error\"\r\n                    >\r\n                      {actionData.fieldErrors.tag}\r\n                    </p>\r\n                  ) : null}\r\n                </fieldset>\r\n\r\n                <button\r\n                  className=\"btn btn-lg pull-xs-right btn-primary\"\r\n                  type=\"submit\"\r\n                >\r\n                  Publish Article\r\n                </button>\r\n              </fieldset>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;AAAA;;;ACAA;AAEA,gBAAmB;AAgEJ,2BAA2B;AAlE1C;AAmEE,QAAM,aAAa;AAEnB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,YAAD,MACE,oCAAC,YAAD;AAAA,IAAU,WAAU;AAAA,KAClB,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,gBACE,QAAQ,+CAAY,gBAAZ,mBAAyB,UAAU;AAAA,IAE7C,oBACE,gDAAY,gBAAZ,mBAAyB,SAAQ,eAAe;AAAA,MAGnD,gDAAY,gBAAZ,mBAAyB,SACxB,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,IAAiB,MAAK;AAAA,IAAQ,IAAG;AAAA,KAC3C,WAAW,YAAY,SAExB,OAGN,oCAAC,YAAD;AAAA,IAAU,WAAU;AAAA,KAClB,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,gBACE,QAAQ,+CAAY,gBAAZ,mBAAyB,QAAQ;AAAA,IAE3C,oBACE,gDAAY,gBAAZ,mBAAyB,OAAM,kBAAkB;AAAA,MAGpD,gDAAY,gBAAZ,mBAAyB,OACxB,oCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,WAAW,YAAY,OAExB,OAGN,oCAAC,YAAD;AAAA,IAAU,WAAU;AAAA,KAClB,oCAAC,YAAD;AAAA,IACE,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,gBACE,QAAQ,+CAAY,gBAAZ,mBAAyB,gBAAgB;AAAA,IAEnD,oBACE,gDAAY,gBAAZ,mBAAyB,eACrB,kBACA;AAAA,MAGP,gDAAY,gBAAZ,mBAAyB,eACxB,oCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,WAAW,YAAY,eAExB,OAGN,oCAAC,YAAD;AAAA,IAAU,WAAU;AAAA,KAClB,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,IACV,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,gBACE,QAAQ,+CAAY,gBAAZ,mBAAyB,QAAQ;AAAA,IAE3C,oBACE,gDAAY,gBAAZ,mBAAyB,OAAM,kBAAkB;AAAA,MAGrD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACd,gDAAY,gBAAZ,mBAAyB,OACxB,oCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,WAAW,YAAY,OAExB,OAGN,oCAAC,UAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,KACN;AAAA;",
  "names": []
}
