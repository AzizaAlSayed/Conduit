{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "route-module:C:\\Users\\laris\\Conduit\\app\\root.tsx", "route-module:C:\\Users\\laris\\Conduit\\app\\routes\\article.tsx", "../app/utils/db.server.ts", "route-module:C:\\Users\\laris\\Conduit\\app\\routes\\article\\$userId.tsx", "route-module:C:\\Users\\laris\\Conduit\\app\\routes\\home.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"C:\\\\Users\\\\laris\\\\Conduit\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"C:\\\\Users\\\\laris\\\\Conduit\\\\app\\\\root.tsx\";\nimport * as route1 from \"C:\\\\Users\\\\laris\\\\Conduit\\\\app\\\\routes\\\\article.tsx\";\nimport * as route2 from \"C:\\\\Users\\\\laris\\\\Conduit\\\\app\\\\routes\\\\article\\\\$userId.tsx\";\nimport * as route3 from \"C:\\\\Users\\\\laris\\\\Conduit\\\\app\\\\routes\\\\home.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/article\": {\n    id: \"routes/article\",\n    parentId: \"root\",\n    path: \"article\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/article/$userId\": {\n    id: \"routes/article/$userId\",\n    parentId: \"routes/article\",\n    path: \":userId\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route2\n  },\n  \"routes/home\": {\n    id: \"routes/home\",\n    parentId: \"root\",\n    path: \"home\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route3\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\nimport type { EntryContext } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders\n  });\n}\n", "import { LiveReload, Outlet } from \"remix\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <html lang=\"en\">\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Remix: So great, it's funny!</title>\r\n        <link rel=\"stylesheet\" href=\"//demo.productionready.io/main.css\"></link>\r\n      </head>\r\n      <body>\r\n        <nav className=\"navbar navbar-light\">\r\n          <div className=\"container\">\r\n            <a className=\"navbar-brand\" href=\"index.html\">\r\n              conduit\r\n            </a>\r\n            <ul className=\"nav navbar-nav pull-xs-right\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" href=\"\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"\">\r\n                  Sign in\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"\">\r\n                  Sign up\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n        <Outlet />\r\n        {process.env.NODE_ENV === \"development\" ? <LiveReload /> : null}\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n", "import {\r\n  ActionFunction,\r\n  Link,\r\n  LoaderFunction,\r\n  Outlet,\r\n  useLoaderData,\r\n} from \"remix\";\r\nimport { redirect } from \"remix\";\r\nimport { db } from \"~/utils/db.server\";\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const form = await request.formData();\r\n  const comment = form.get(\"comment\");\r\n\r\n  if (typeof comment !== \"string\") {\r\n    throw new Error(`Form not submitted correctly.`);\r\n  }\r\n\r\n  const fields = { comment };\r\n\r\n  const userInfo = await db.user.create({\r\n    data: { userName: \"laraa\", ...fields },\r\n  });\r\n  return redirect(`/article/${userInfo.id}`);\r\n};\r\n\r\ntype LoaderData = {\r\n  userListItems: Array<{ id: string; userName: string; comment: string }>;\r\n};\r\n\r\nexport const loader: LoaderFunction = async () => {\r\n  const data: LoaderData = {\r\n    userListItems: await db.user.findMany(),\r\n  };\r\n  return data;\r\n};\r\n\r\nexport default function Article() {\r\n  const data = useLoaderData<LoaderData>();\r\n\r\n  const users = data.userListItems.map((user) => (\r\n    <div className=\"card\" key={user.id}>\r\n      <div className=\"card-block\">\r\n        <p className=\"card-text\">\r\n          <Link to={user.id}>{user.comment}</Link>\r\n        </p>\r\n      </div>\r\n      <div className=\"card-footer\">\r\n        <a href=\"\" className=\"comment-author\">\r\n          <img\r\n            src=\"https://i.redd.it/a6g2v0xi0pe41.png\"\r\n            className=\"comment-author-img\"\r\n          />\r\n        </a>\r\n        &nbsp;\r\n        <a href=\"\" className=\"comment-author\">\r\n          <Link to={user.id}>{user.userName}</Link>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  ));\r\n  return (\r\n    <div className=\"article-page\">\r\n      <div className=\"banner\">\r\n        <div className=\"container\">\r\n          <h1>Create a new implementation</h1>\r\n          <div className=\"article-meta\">\r\n            <a href=\"\">\r\n              <img src=\"https://i.redd.it/a6g2v0xi0pe41.png\" />\r\n            </a>\r\n            <div className=\"info\">\r\n              <a href=\"\" className=\"author\"></a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container page\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-8 offset-md-2\">\r\n            <form className=\"card comment-form\" method=\"post\">\r\n              <div className=\"card-block\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  placeholder=\"Write a comment...\"\r\n                  name=\"comment\"\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"card-footer\">\r\n                <img\r\n                  src=\"https://i.redd.it/a6g2v0xi0pe41.png\"\r\n                  className=\"comment-author-img\"\r\n                />\r\n                <button className=\"btn btn-sm btn-primary\" type=\"submit\">\r\n                  Post Comment\r\n                </button>\r\n              </div>\r\n            </form>\r\n            {users}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { PrismaClient } from \"@prisma/client\";\r\n\r\nlet db: PrismaClient;\r\n\r\ndeclare global {\r\n  var __db: PrismaClient | undefined;\r\n}\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  db = new PrismaClient();\r\n  db.$connect();\r\n} else {\r\n  if (!global.__db) {\r\n    global.__db = new PrismaClient();\r\n    global.__db.$connect();\r\n  }\r\n  db = global.__db;\r\n}\r\n\r\nexport { db };", "export default function UserRoute() {\r\n  return <div></div>;\r\n}\r\n", "import { Link, useLoaderData } from \"remix\";\r\nimport { LoaderFunction } from \"remix\";\r\nimport { db } from \"~/utils/db.server\";\r\n\r\ntype LoaderData = {\r\n  userListItems: Array<{ id: string; userName: string }>;\r\n};\r\n\r\nexport const loader: LoaderFunction = async () => {\r\n  const data: LoaderData = {\r\n    userListItems: await db.user.findMany(),\r\n  };\r\n  return data;\r\n};\r\n\r\nexport default function HomeRoute() {\r\n  const data = useLoaderData<LoaderData>();\r\n\r\n  const users = data.userListItems.map((user) => (\r\n    <div key={user.id} className=\"article-preview\">\r\n      <div className=\"article-meta\">\r\n        <a href=\"profile.html\">\r\n          <img src=\"https://i.redd.it/a6g2v0xi0pe41.png\" />\r\n        </a>\r\n        <div className=\"info\">\r\n          <a href=\"\" className=\"author\">\r\n            <p>\r\n              <a href=\"\" className=\"author\">\r\n                <Link to={user.id}>{user.userName}</Link>\r\n              </a>\r\n            </p>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <a href=\"\" className=\"preview-link\">\r\n        <h1>How to build webapps that scale</h1>\r\n        <p>This is the description for the post.</p>\r\n        <span>Read more...</span>\r\n      </a>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <div className=\"banner\">\r\n        <div className=\"container\">\r\n          <h1 className=\"logo-font\">conduit</h1>\r\n          <p>A place to share your knowledge.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container page\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <div className=\"feed-toggle\">\r\n              <ul className=\"nav nav-pills outline-active\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\" href=\"\">\r\n                    Global Feed\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            {users}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
